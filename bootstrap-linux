#!/usr/bin/env bash

##################################################
# $ # To migrate up a fresh machine              #
#                                                #
# $ curl -Lks <url to this script> | /bin/bash   #
##################################################

# to use my default settings:
# sudo curl -Lks https://github.com/ei9h7/automated-machine-setup/bootstrap-linux | /usr/bin/env bash

# update and upgrade apt and install dependencies
sudo apt-get update
sudo apt-get install -y git software-properties-common python3.8 python3-dev python3-pip python3-setuptools
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo apt-get install -y ansible python-argcomplete
sudo activate-global-python-argcomplete

# clone project repo to local machine
[ -d "$HOME/projects" ] || mkdir -p $HOME/projects
cd $HOME/projects
git clone -b netbook https://github.com/ei9h7/automated-machine-setup.git
git clone https://github.com/ei9h7/dotfiles.git
cd automated-machine-setup

# backup existing dotfiles before running machine setup
mkdir -p .dotfiles-backup 
git --git-dir="$HOME/projects/dotfiles/" --work-tree="$HOME" checkout
[ $? = 0 ] || echo "Backing up pre-existing dot files." && git --git-dir="$HOME/projects/dotfiles/" --work-tree="$HOME" checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | xargs -I{} cp {} "$HOME/projects/automated-machine-setup/.dotfiles-backup/{}"

# ansible install requirements 
ansible-galaxy install -r requirements.yml

# encrypt your own secrets.yml file
# ansible-vault encrypt secrets.yml

# encrypt local .gitconfig file
[ -f "$HOME/.gitconfig" ] && { cp "$HOME/.gitconfig" "$HOME/projects/dotfiles/.config/git/config.enc" && ansible-vault encrypt "$HOME/projects/dotfiles/.config/git/config.enc" ;}

ansible-playbook main.yml --ask-vault-pass --ask-become-password 
