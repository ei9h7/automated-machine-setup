---
downloads: "{{ lookup('env', 'HOME') }}/.ansible-downloads/"

# Ansible Vault Secrets File
secrets_vault: "secrets.yml"

# Configure dotfiles for this system
configure_dotfiles: true
dotfiles_repo: "https://github.com/ei9h7/dotfiles.git"
dotfiles_repo_version: "master"
dotfiles_repo_accept_hostkey: true
dotfiles_repo_local_destination: "{{ lookup('env', 'HOME') }}/projects/dotfiles"
dotfiles_home: "{{ lookup('env', 'HOME') }}"
dotfiles_files:
  - .config/htop
  - .config/neofetch
  - .gitconfig
  - .gnupg/gpg-agent.conf
  - .bash_profile
  - .bashrc
  - .gitignore
  - .gitmodules
  - .hyper.js
  - .inputrc
  - .nanorc
  - .profile
  - .screenrc
  - .tmux.conf
  - .vimrc
  - .zshrc
  - .zshenv

# Edit sudoers file with visudo
configure_sudoers: true
sudoers_folder: "/etc/sudoers.d"
sudoers_custom_config: |
  # Allow users in sudo group to use sudo with no password (linux).
  %sudo ALL=(ALL) NOPASSWD: ALL

# Customize OS
configure_linux: false
linux_script: "$DOTFILES/.linux-defaults --no-restart"

# Set default shell (choose only one)
set_zsh: false
set_bash: true

# Set 'true' to configure homebrew packages  
configure_homebrew: false
homebrew_repo: "https://github.com/Homebrew/brew"
homebrew_prefix: "/home/linuxbrew/.linuxbrew"
homebrew_install_path: "{{ homebrew_prefix }}/Homebrew"
homebrew_brew_bin_path: "{{ homebrew_prefix }}/bin"
homebrew_upgrade_all_packages: false
homebrew_use_brewfile: false
homebrew_brewfile_dir: "$DOTFILES"
homebrew_clear_cache: false
homebrew_folders_additional: []
homebrew_installed_packages: []
  # Example:
  # - ansible # Installed via Pip.
  # - { name: yubikey-agent, install_options: "restart_service: true" }
homebrew_uninstalled_packages: []
homebrew_taps: []

# Set 'true' to configure apt packages
configure_apt: true
apt_installed_packages:
    - ansible
    - build-essential
    - procps
    - curl
    - file
    - git
apt_removed_packages: []
apt_update_cache: true
apt_cache_time: 3600
# Set 'true' to autoclean and autoremove
apt_autoclean: true
apt_autoremove: false

# Set to 'true' to configure the terminal theme etc
configure_terminal: false

# Install packages from other package managers.
# Note: Make sure the required package managers are installed.
composer_packages: []
gem_packages:
  - name: colorls
    state: latest
npm_packages: []
pip_packages: []

# configure yubikey
configure_yubikey: true

# Set to 'true' to configure Visual Studio Code
configure_vsc: false
vsc_extensions:
  - azblockchain.azure-blockchain
  - coenraads.bracket-pair-colorizer-2
  - aaronyoung.dark-synthwave-vscode
  - ms-azuretools.vscode-docker
  - formulahendry.docker-explorer
  - quentingruber.dockerfiletemplate
  - tqrhsn.vscode-docker-registry-explorer
  - george3447.docker-run
  - dotiful.dotfiles-syntax-highlighting
  - blake-mealey.generate-wt-scheme
  - mhutchie.git-graph
  - github.codespaces
  - github.vscode-pull-request-github
  - ntc.integrated-terminal-tasks
  - hoovercj.vscode-power-mode
  - stuyk.powermodesounds
  - ms-python.python
  - dhedgecock.radical-vscode
  - ms-vscode-remote.remote-containers
  - ms-vscode-remote.remote-ssh
  - ms-vscode-remote.remote-ssh-edit
  - ms-vscode-remote.remote-wsl
  - ms-vscode-remote.vscode-remote-extensionpack
  - juanblanco.solidity
  - robbowen.synthwave-vscode
  - visualstudioexptteam.vscodeintellicode
  - dunstontc.vscode-docker-syntax
  - redhat.vscode-yaml
  - ms-vscode.powershell
vsc_settings_overwrite: no
vsc_keys_overwrite: no
vsc_custom_config: "$DOTFILES/.config/vscode/settings.json"
vsc_custom_keys: "$DOTFILES/.config/vscode/keybindings.json"

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks: []